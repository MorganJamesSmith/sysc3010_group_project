' Copyright (C) 2020 by Samuel Dewan
' Copyright (C) 2020 by Morgan Smith

@startuml

class Database {
    +db: sqlite3.Connection
    
    +Integer: get_user_id(Byte[16] badge_id)
    +Boolean: user_is_permitted(Integer user_id, Integer door_id)
    +void: record_user_access(Integer user_id, Integer door_id, Integer user_temp, Integer ambient_temp)

    +Integer: num_users_in_building()
    +db_result: query(db_query query)
}

class Settings {
    +minimum_safe_temperature: float
    +maximum_safe_temperature: float
    +maximum_occupancy: int
}

class TCPClient {
    +socket: socket.socket
    +address: str
    +queue: Queue
}

class Client {
    connection: transport.Connection
    address: str
    entrance: bool
    node_id: int
}

class Transaction {
    client: Client
    tid: int
    employee_id: int
    status: str
    temp_reading: int
}

class ControlServer {
    +clients: list<Client>
    +tcp_clients: list<TCPClient>
    +transactions: list<Transaction>

    +current_occupancy: int
    +database: Database
    +cursor
    +channel: thingspeak.Channel
    +server: transport.Server
    +tcp_server: socket.socket

    +void main_loop()
    -void _new_client(connection, address)
    -void _new_message(client, received_message)

    +Tuple<str> employee_id_to_status(employee_id)
    +int badge_id_to_employee_id(badge_id)
    +void send_door_state_update()
    +void save_access(transaction)
    +void close()
    
    {static} str settings_to_json(settings)
    {static} Settings json_to_settings(json_string)
}

ServerController --> Database
ServerController --> Settings
ServerController --> TCPClient
ServerController --> Client
ServerController --> Transaction

@enduml

