#+title: SYSC3010 Group Project
* Table of Contents                                          :TOC_1:noexport:
- [[#symptom-monitoring-door-system][Symptom monitoring Door System]]
- [[#possible-hardware][Possible hardware]]
- [[#group-expectations][Group Expectations]]
- [[#group-roles][Group Roles]]
- [[#weekly-meeting-guidelines][Weekly Meeting Guidelines]]
- [[#project-meeting-notes][Project Meeting Notes]]

* Symptom monitoring Door System
** Description
The purpose of this system is to increase security and safety of
secured locations, like offices. The system will attempt to prevent
the spread of illness by limiting the number of people which can enter
the building, and by preventing people with a high body temperature
from entering the building.

This system will be mounted on the entrances and exits of a
building. The system will be modular to allow an arbitrary number of
nodes to be added.

The system will display a green light at the entrance if it is
accepting people. The light will turn red when the area is closed or
if there are too many people inside.

If the light is green, the user will present their NFC security card
to the system. The system send a message containing a unique user ID
to a server. The server will use it'd database to determine if the
user is authorized and if the user had previously shown symptoms to
the system within the last 14 days. The server will then notify the
door with the results of the query.

If the user has not already been denied, the system will then take the
user's temperature. If the temperature is above the threshold, they
can try again in 1 minute. If they fail 3 times in a row, they will be
forbidden access, and the operator of the system will have the option
to automatically deny them entry for the duration of a quarantine
period.

Every access attempt, including the associated temperature reading and
user ID, is sent to the server to be logged in a database.

If the temperature is below the threshold, and they have access, the
door will open.

Users will also have to present their NFC card to the door to leave
the building. By tracking users entering and exiting the building, the
server will know how many people are in the building.

The central server will also provide a GUI available to the buildings
security team. This GUI will allow security officers to manually
update the status of individuals in case a door must fall back to
manual operation. It will also allow the security team to modify who
has access to the building. For example, if someone receives a
negative test result for COVID-19, their access to the building could
be restored.

** Hardware
- 3D printed scale model of door
- Servo
- Contact-less Temperature Sensor
- NFC reader + cards
- Raspberry Pi's
** Requirements
*** Computer Components [3/3]
- [X] Computer per student
  - Computer for each entrance and exit
  - Database computer
- [X] computer in standalone mode
  - Interface for security team
    - Allow manual modification of user status
    - View temperature information on each person
- [X] computer in headless mode
  - Computers at entrances and exits
*** Hardware Components [2/3]
- [X] Actuator
  - Door opener
- [X] one sensor per student
  - Temperature probes
- [ ] Feedback loop
  - Door opens in response to temperature
*** Software Components [5/7]
- [X] Database
  - Number of people inside building
  - Uniquely identify people via smart card
- [X] Computer hosting database does something else
  - Runs GUI
- [ ] Periodic Timing Loop
  - Restrict access to when building is open
- [ ] Data processing
  - Access control
  - View interaction history
- [X] Notifications
  - Notify on failure and when near capacity
  - Notify if known infected people try to enter
- [X] Communication (through thingspeak)
  - Synchronize Database
- [X] GUI
  - See security team interface

* Possible hardware
** Temperature Sensor
- [[https://www.melexis.com/en/product/MLX90614/Digital-Plug-Play-Infrared-Thermometer-TO-Can][MLX90614]]
    - Very popular IR thermometer in TO-can
    - MLX90614ESF-DAA is the medical version, MLX90614ESF-BAA is the non medial
      3 V version
    - In stock at [[https://www.sparkfun.com/products/9570][SparkFun]]
- [[https://www.excelitas.com/product/tpis-1t-1256-l55-digipile-sensor][TPIS 1T 1256 L5.5]]
    - Designed for ear and forehead temperature measurement applications
    - 5 degree field of view
    - 67 counts per degree kelvin for a 40 ℃ object at 25 ℃ ambient, 8 counts per kelvin of noise for same conditions
    - Also measures ambient temp
    - Very annoying badly documented single wire digital interface, may be a bit
      tricky to get working directly on R-Pi but we could always use a small
      microcontoller like an ATTiny as a bridge
    - In stock at [[https://www.digikey.ca/en/products/detail/excelitas-technologies/TPIS-1T-1256-L5-5/5885902][DigiKey]]
** NFC
- [[https://www.nxp.com/docs/en/nxp/data-sheets/PN532_C1.pdf][Adafruit breakout for PN532]]
    - Seems to be compatible with [[https://github.com/nfc-tools/libnfc][libnfc]]
    - I2C, SPI and UART interfaces (Adafruit seems to strongly recommend SPI for
      use with the Raspberry Pi, but that could be a limitation of their
      CircuitPython library)
    - Comes with a MiFare Classic 1K card
    - Can get MiFare Classic in many different form factors (cards, keychains,
      rings, bracelets, etc.) from Adafruit or Sparkfun.
- [[https://www.nxp.com/products/rfid-nfc/nfc-hf/nfc-readers/explore-nfc-exclusive-from-element14:PNEV512R][NXP EXPLORE-NFC-WW]]
    - R-Pi hat based on [[https://www.nxp.com/docs/en/data-sheet/PN512.pdf][PN512]]
    - Cheaper than the Adafruit option and it's a nice hat form factor, but it
      is only available from [[https://canada.newark.com/nxp/explore-nfc-ww/nfc-add-on-board-raspberry-pi/dp/45X6356][Newark]]
      and they have not been reliable lately.
- Mario has a module based on the [[https://www.nxp.com/docs/en/data-sheet/MFRC522.pdf][MFR522]]
    - Slightly older chip than the others, but it should support everything we
      need
    - Might be hard to reliably find exactly the same board for other group
      members, it came as part of a kit and seems to be one of those Ali-Express
      type things. It would probably be possible to find other boards with the
      same chip though


* Group Expectations
- Slack messages will be responded to within 1 work day.
* Group Roles
** Sam
- Submit deliverables
** Sunny
** Mario
** Morgan
- Meeting Secretary
* Weekly Meeting Guidelines
- Happens every Tuesday @ 09:30
- Reminder should be sent in slack group chat the previous night
- Meeting is voice chat @ https://meet.jit.si/wewantbird
- Morgan takes notes and adds them to this document


1. Deliver Reports of what was accomplished since last meeting
2. Discuss any impediments
3. Discuss any impediments expected for the next week (example: lack
   of time due to midterms or travel)
4. Assign work for the next week
* Project Meeting Notes
** Meeting 8 <2020-10-20 Tue 09:30>
*** Agenda
- Design Peer Review Integration
** Meeting 7 <2020-10-13 Tue 09:30>
*** Minutes
- Sam demoed his ThingSpeak code (very cool, much wow)
- Determined project design schedule
*** Project Design Roles
- flow chart for testing
**** Sam
- demo plan 3
- design overview text
- software design text
- Hardware design text
- temperature sensor
  - relevant hardware specification
  - test plan 2 a
- communication protocol table
- Related Class diagrams
- door node circuit diagram
**** Sunny
- Problem statement
- Project Update
- Database table design (help from Sam)
- Related Class diagrams
- test plan demo plan 1
- test plan demo 2 b
**** Mario
- NFC
  - relevant hardware specification
  - test plan 2 a
- Related Class diagrams
- flow chart for door interface
- flow chart for server:door messaging
**** Morgan
- motor
  - relevant hardware specification
  - test plan 2 a
- UML Architectural diagram
- Message sequence diagram(s)
- Related Class diagrams
** Meeting 6 <2020-10-06 Tue 09:30-10:10>
*** Minutes
- preliminary project design discussions
** Meeting 5 <2020-10-01 Thu 08:30-10:15>
- Reviewed proposal feedback and made changes
** Meeting 4 <2020-09-29 Tue 09:30-11:30>
*** Agenda
- Review proposal draft together
*** Minutes
- We reviewed the proposal and made some changes
*** TODOs
- Everyone: Touch up proposal as we discussed
- Morgan: Email the prof asking if we should include the actors in our
  deployment diagram
** Meeting 3 <2020-09-22 Tue 09:30-11:00>
*** Agenda
- Research project concepts
  - Look into hardware price/availability/complexity
*** Completed
- Finalized Project Idea
*** TODOs
- Everyone: Review proposal draft posted on Monday and bring written
  comments to next meeting
- Sam: Update readme with hardware research
- Morgan: Email Prof to confirm our project concept is approved
**** Proposal
***** Timeline
****** Content
<2020-09-27 Sun 12:00>
****** Latex formatting + send PDF to slack
<2020-09-28 Mon>
***** Sunny
- Executive Summary
  - Problem Statement
  - Motivation
  - Objective
  - Goals
  - Scope
***** Morgan
- deployment diagram
- door usage diagram
- hardware block diagram
***** Sam
- Test Plan
- Milestones and Timeline
- Latex formatting
***** Mario
- proposed solution
  - Server database
  - GUI
  - Integrate Morgan's diagrams
** Meeting 2 <2020-09-18 10:00-12:20>
*** Agenda
- Discuss Project Ideas
- Finalizing team contract
*** Completed
- Team contract
- Initial draft of proposal of a door monitoring system
** Meeting 1 <2020-09-17 10:30-11:30>
- Assigned Morgan "Secretary" role for weekly meetings
- Assigned Sam "Submit deliverables" role
- Created meeting guidelines (found [[https://github.com/MorganJamesSmith/sysc3010_group_project/blob/master/readme.org#weekly-meeting-guidelines][here]])
- Discussed team contract
- Created a readme to track progress, expectations, and meeting notes
  (found [[https://github.com/MorganJamesSmith/sysc3010_group_project/blob/master/readme.org][here]])
- Scheduled Meeting 2
*** To be completed before meeting 2
- All members: Review
  https://github.com/MorganJamesSmith/sysc3010_group_project/blob/master/readme.org
  and provide comments
- All members: Review all project requirements (Fact check + add information to
  this readme)
